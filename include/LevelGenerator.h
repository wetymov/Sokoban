/*
@ - игрок
# - стена
X - метка на которую необходимо поместить блок
O - блок
*/
#pragma once
#include <iostream>
#include <vector>
#include <string>
#include <fstream>

using namespace std;

class Level {
private:
	vector<vector<string>> level_1() { // test level sokoban :)
		vector<vector<string>> l{
			{"#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," ","X"," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," ","O"," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," ","X","O"," "," ","@"," "," ","O","X"," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," ","O"," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," ","X"," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#",},
		};
		return l;
	}

	vector<vector<string>> level_2() { // first level sokoban :)
		vector<vector<string>> l{
			{"#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," ","#","X","X","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," ","#","O","O","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," ","#"," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," ","#","#"," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," ","@"," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#",},
			{"#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#",},
		};
		return l;
	}

	vector<vector<string>> level_3() { // second level sokoban :)
		vector<vector<string>> l{
			{" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
			{" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
			{" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
			{" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
			{" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
			{" "," "," "," ","#","#","#","#","#"," "," "," "," "," "," "," "," ",},
			{" "," ","#","#","#"," "," "," ","#"," "," "," "," "," "," "," "," ",},
			{" "," ","#","X","@","O"," "," ","#"," "," "," "," "," "," "," "," ",},
			{" "," ","#","#","#"," ","O","X","#"," "," "," "," "," "," "," "," ",},
			{" "," ","#","X","#","#"," "," ","#"," "," "," "," "," "," "," "," ",},
			{" "," ","#"," ","#"," "," "," ","#"," "," "," "," "," "," "," "," ",},
			{" "," ","#","O"," "," "," "," ","#","#"," "," "," "," "," "," "," ",},
			{" "," ","#"," "," "," ","O","O","X","#"," "," "," "," "," "," "," ",},
			{" "," ","#"," "," "," ","X"," "," ","#"," "," "," "," "," "," "," ",},
			{" "," ","#","#","#","#","#","#","#","#"," "," "," "," "," "," "," ",},
			{" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
		};
		return l;
	}
public:
	vector<vector<string>> level;
	Level(int number_level) { // конструктор уровней
		if (number_level == 1) {
			level = level_1();
		}
		else if (number_level == 2) {
			level = level_2();
		}
		else if (number_level == 3) {
			level = level_3();
		}
	}
	Level() {
		level = level_1(); // default constructor
	}

	vector<vector<string>> get_level() { // получаем наш уровень
		return level;
	}
};